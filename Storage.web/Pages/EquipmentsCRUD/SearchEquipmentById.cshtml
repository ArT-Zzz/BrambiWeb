@page
@using AutoGens
@using Microsoft.EntityFrameworkCore
@using Microsoft.EntityFrameworkCore.ChangeTracking
@{
    ViewData["Title"] = "Search Equipment By Equipment ID";
}
<h1>@ViewData["Title"]</h1>

@functions
{
    string? Message {get; set;} // message of error if the equipment id doesn't exist
    bool EquipmentExist {get; set;}

    // IActionResult is a flexible interface, you can choose what you want to return for the client, views, redirect to other pages, like in this case
    public IActionResult OnGet(string EquipmentId)
    {
        Model.Message = "";
        if(EquipmentId != null && EquipmentId != "")
        {
            EquipmentExist = SearchEquipmentById(EquipmentId);
            if(EquipmentExist == true)
            {
                Console.WriteLine("Equipment ID is not registered");
                Model.Message = $"There are no Equipments found with the Equipment Id {EquipmentId}";
            }
            else
            {
                TempData["EquipmentId"] = EquipmentId;
                TempData["ReturnInfoShown"] = ""; // no message to send
                Console.WriteLine("The Equipment Id exists");
                return RedirectToPage("/EquipmentsCRUD/ViewOneEquipment");
            }
        }
        return Page();
    }

    public static bool SearchEquipmentById(string? SearchTerm)
    {
        bool aux = false;
        if (string.IsNullOrEmpty(SearchTerm))
        {
            throw new InvalidOperationException();
        }
        using (bd_storage db = new())
        {
            IQueryable<Equipment>? equipments = db.Equipments
                .Include(e => e.Area)
                .Include(e => e.Status)
                .Include(e => e.Coordinator)
                .Where(e => e.EquipmentId.Equals(SearchTerm)); // Utiliza StartsWith para buscar equipos cuyos nombres comiencen con el término de búsqueda

            if (!equipments.Any())
            {
                Console.WriteLine("No equipment found matching the search term: " + SearchTerm);
                aux = true;
            }
            else
            {
                aux = false;
            }
        }
        return aux;
    }
}


<h4>Provide the equipment ID you would like to see:</h4>
    @if (Model.Message!= "")
    {
        <div class="error-message">
            @Model.Message
        </div>
    }
    <form method="get" action="/EquipmentsCRUD/SearchEquipmentById">
        <input type="text" class="form-control" id="EquipmentId" name="EquipmentId" maxlength="15" required>
        <br>
        <button type="submit" class="btn btn-primary" name="action" value="confirm">Search</button>
    </form>

