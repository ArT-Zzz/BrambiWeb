@page
@using Microsoft.EntityFrameworkCore
@using Microsoft.EntityFrameworkCore.ChangeTracking
@using AutoGens
@{
    ViewData["Title"] = "Search Damage and Lost Equipments By Date";
}

<div class="container">
    <h1 class="display-4">Search Damage and Lost Equipments By Date</h1>

    <form method="post">
        <div class="form-group">
            <label for="dateToFind">Date of Event:</label>
            <div class="row">
                <div class="col">
                    <select class="form-control" id="year" name="year" required>
                        <option value="">Year</option>
                        @for (int i = DateTime.Now.Year; i >= 2000; i--)
                        {
                            <option value="@i">@i</option>
                        }
                    </select>
                </div>
                <div class="col">
                    <select class="form-control" id="month" name="month" required>
                        <option value="">Month</option>
                        @for (int i = 1; i <= 12; i++)
                        {
                            <option value="@i">@i</option>
                        }
                    </select>
                </div>
                <div class="col">
                    <select class="form-control" id="day" name="day" required>
                        <option value="">Day</option>
                        @for (int i = 1; i <= 31; i++)
                        {
                            var dayValue = i.ToString().PadLeft(2, '0');
                            <option value="@dayValue">@dayValue</option>
                        }
                    </select>
                </div>
            </div>
        </div>

        <button type="submit" class="btn btn-primary">Search Equipment</button>
    </form>

    @if (Request.Method == "POST")
    {
        <div class="mt-3">
            <h3>Search Results:</h3>
            @{
                // Invocar la lógica de búsqueda de equipos dañados o perdidos por fecha y almacenar los resultados en una variable
                var dateToFind = $"{Request.Form["year"]}-{Request.Form["month"]}-{Request.Form["day"]}";
                var searchResults = FindDandLequipmentByDate(dateToFind);
            }

            @if (searchResults.Any())
            {
                <table class="table">
                    <thead>
                        <tr>
                            <th>Equipment ID</th>
                            <th>Status</th>
                            <th>Name</th>
                            <th>Description</th>
                            <th>Date</th>
                            <th>Student</th>
                            <th>Coordinator</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var dal in searchResults)
                        {
                            <tr>
                                <td>@dal.DyLequipmentId</td>
                                <td>@dal.Status?.Value</td>
                                <td>@dal.Equipment?.Name</td>
                                <td>@dal.Description</td>
                                <td>@dal.DateOfEvent</td>
                                <td>@dal.Student?.Name</td>
                                <td>@dal.Coordinator?.Name</td>
                            </tr>
                        }
                    </tbody>
                </table>
            }
            else
            {
                <p>No damaged or lost equipment found with the specified Date of Event.</p>
            }
        </div>
    }
</div>

@functions
{
    public List<DyLequipment> FindDandLequipmentByDate(string dateToFind)
    {
        using (bd_storage db = new())
        {
            IQueryable<DyLequipment> dyLequipments = db.DyLequipments
                .Include(dal => dal.Status)
                .Include(dal => dal.Equipment)
                .Include(dal => dal.Student)
                .Include(dal => dal.Coordinator)
                .Where(dal => dal.DateOfEvent.ToString().StartsWith(dateToFind));

            db.ChangeTracker.LazyLoadingEnabled = false;

            return dyLequipments.ToList();
        }
    }
}
