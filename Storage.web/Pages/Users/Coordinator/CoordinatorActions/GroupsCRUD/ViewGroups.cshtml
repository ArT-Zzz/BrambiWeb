@page
@using Microsoft.EntityFrameworkCore
@using Microsoft.EntityFrameworkCore.ChangeTracking
@using AutoGens
@{
    ViewData["Title"] = "View All Groups"; // título que se mostrará en la página
}

@functions {
    public static bool ViewAllGroups(out List<Group> allGroups, out int totalGroups)
    {
        // Flag to indicate whether there are any groups.
        bool hasGroups = false;

        allGroups = new List<Group>();
        totalGroups = 0;

        // Set up a connection to the database.
        using (bd_storage db = new())
        {
            // Retrieve groups from the database.
            IQueryable<Group> groups = db.Groups;

            // Check if there are no groups in the database.
            if ((groups is null) || !groups.Any())
            {
                // Print a message and set the flag to true.
                WriteLine("There are no groups");
                hasGroups = false;
                return hasGroups;
            }

            allGroups = groups.ToList();
            totalGroups = allGroups.Count;
        }

        // Set the flag indicating whether there are groups.
        hasGroups = true;

        return hasGroups;
    }
}

<nav class="navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-white border-bottom box-shadow mb-3">
    <div class="container">
        <div class="navbar-collapse collapse d-sm-inline-flex justify-content-between">
            <ul class="navbar-nav flex-grow-1">
                <li class="nav-item">
                    <a class="nav-link text-dark" asp-area="" asp-page="/GroupsCRUD/UpdateGroup">Update Group</a>
                </li>
            </ul>
        </div>
    </div>
</nav>

<div class="text-center">
    <h1 class="display-4">@ViewData["Title"]</h1>

    <table class="table">
        <thead>
            <tr>
                <th>ID</th>
                <th>Group Name</th>
            </tr>
        </thead>
        <tbody>
            @{
                List<Group> allGroups;
                int totalGroups;
                if (ViewAllGroups(out allGroups, out totalGroups) && allGroups.Any())
                {
                    foreach (var group in allGroups)
                    {
                        <tr>
                            <td>@group.GroupId</td>
                            <td>@group.Name</td>
                        </tr>
                    }
                    WriteLine($"Total: {totalGroups}");
                }
                else
                {
                    <h2>No se encontraron grupos en la base de datos</h2>
                    WriteLine("No se encontraron grupos en la base de datos");
                }
            }
        </tbody>
    </table>
</div>