@page
@using Microsoft.EntityFrameworkCore
@using Microsoft.EntityFrameworkCore.ChangeTracking
@using AutoGens
@{
    ViewData["Title"] = "View All Professors"; // título que se mostrará en la página
}

@functions {
    public static bool ViewAllProfessors(out List<Professor> allProfessors, out int totalProfessors)
    {
        // Flag to indicate whether there are any professors.
        bool hasProfessors = false;

        allProfessors = new List<Professor>();
        totalProfessors = 0;

        // Set up a connection to the database.
        using (bd_storage db = new())
        {
            // Retrieve professors from the database.
            IQueryable<Professor> professors = db.Professors;

            // Check if there are no professors in the database.
            if ((professors is null) || !professors.Any())
            {
                // Print a message and set the flag to true.
                WriteLine("There are no professors");
                hasProfessors = false;
                return hasProfessors;
            }

            allProfessors = professors.ToList();
            totalProfessors = allProfessors.Count;
        }

        // Set the flag indicating whether there are professors.
        hasProfessors = true;

        return hasProfessors;
    }
}

<nav class="navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-white border-bottom box-shadow mb-3">
    <div class="container">
        <div class="navbar-collapse collapse d-sm-inline-flex justify-content-between">
            <ul class="navbar-nav flex-grow-1">
                <li class="nav-item">
                    <a class="nav-link text-dark" asp-area="" asp-page="/Users/Professors/CRUD/UpdateProfessor">Update
                        Professor</a>
                </li>
            </ul>
        </div>
    </div>
</nav>

<div class="text-center">
    <h1 class="display-4">@ViewData["Title"]</h1>

    <table class="table">
        <thead>
            <tr>
                <th>ID</th>
                <th>Name</th>
                <th>Last Name P</th>
                <th>Last Name M</th>
                <th>NIP</th>
                <th>Password</th>
            </tr>
        </thead>
        <tbody>
            @{
                List<Professor> allProfessors;
                int totalProfessors;
                if (ViewAllProfessors(out allProfessors, out totalProfessors) && allProfessors.Any())
                {
                    foreach (var professor in allProfessors)
                    {
                        <tr>
                            <td>@Functions.Decrypt(professor.ProfessorId)</td>
                            <td>@professor.Name</td>
                            <td>@professor.LastNameP</td>
                            <td>@professor.LastNameM</td>
                            <td>@Functions.Decrypt(professor.Nip)</td>
                            <td>@professor.Password</td>
                        </tr>
                    }
                    WriteLine($"Total: {totalProfessors}");
                }
                else
                {
                    <h2>No se encontraron profesores en la base de datos</h2>
                    WriteLine("No se encontraron profesores en la base de datos");
                }
            }
        </tbody>
    </table>
</div>